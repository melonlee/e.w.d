package com.melonlee.ewd.dao;import com.melonlee.ewd.bean.AccountBean;import com.melonlee.ewd.bean.MessageBean;import com.melonlee.ewd.utils.DateFormatUtils;import com.melonlee.ewd.utils.StaticParam;import org.springframework.jdbc.core.JdbcTemplate;import org.springframework.jdbc.core.RowCallbackHandler;import org.springframework.stereotype.Repository;import javax.annotation.Resource;import java.sql.ResultSet;import java.sql.SQLException;import java.util.ArrayList;@Repositorypublic class AccountDao {    @Resource    private JdbcTemplate jdbcTemplate;    // 获取account list    public ArrayList<AccountBean> getAll() {        final ArrayList<AccountBean> list = new ArrayList<AccountBean>();        jdbcTemplate.query(                "SELECT * FROM T_Account  order by createDate desc ",                new RowCallbackHandler() {                    @Override                    public void processRow(ResultSet result)                            throws SQLException {                        AccountBean bean = new AccountBean();                        bean.setId(result.getInt("id"));                        bean.setTitle(result.getString("title"));                        bean.setDevUrl(result.getString("devUrl"));                        bean.setToken(result.getString("token"));                        bean.setCreateDate(result.getString("createDate"));                        list.add(bean);                    }                });        return list;    }    public void update(AccountBean account) {        jdbcTemplate.update(                "UPDATE T_Account SET title =?,token=?,devUrl=? WHERE id = ? ",                new Object[]{account.getTitle(), account.getToken(),                        account.getDevUrl(), account.getId()});    }    public void save(AccountBean account) {        jdbcTemplate                .update("INSERT INTO T_Account (title,token,devUrl,createDate) VALUES(?,?,?,?)",                        new Object[]{account.getTitle(), account.getToken(),                                account.getDevUrl(), DateFormatUtils.getNow()});    }    public int deleteByID(int id) {        return jdbcTemplate.update("DELETE FROM T_Account WHERE id = ?",                new Object[]{id});    }    public int validateToken(String token) {        return jdbcTemplate                .update("UPDATE T_Account SET status =1  WHERE token = ? and status = 0 ",                        new Object[]{token});    }    public MessageBean getAccountDefaultMsg(String token) {        final MessageBean messageBean = new MessageBean();        jdbcTemplate.query(                "SELECT T_Message.* FROM T_Message  LEFT JOIN T_Account  ON T_Message.accountID = T_Account.id  WHERE T_Message.isDefault=1 AND  T_Account.token = '" + token + "' ",                new RowCallbackHandler() {                    @Override                    public void processRow(ResultSet result)                            throws SQLException {                        messageBean.setId(result.getInt("T_Message.id"));                        messageBean.setTitle(result.getString("T_Message.title"));                        messageBean.setType(result.getInt("type"));                        if (messageBean.getType() == 2) {                            messageBean.setImageUrl(StaticParam.IMAGE_URL_HOST+result.getString("T_Message.imageUrl"));                            messageBean.setUrl(result.getString("T_Message.url"));                        }                    }                });        return messageBean;    }}